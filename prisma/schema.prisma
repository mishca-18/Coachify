// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Copy the rest of your models from the original schema.prisma
model User {
  id              String           @id @default(uuid())
  ClerkUserId     String           @unique
  email           String           @unique
  name            String?
  imageUrl        String?
  industry        String?
  industryInsight IndustryInsight? @relation("industry", fields: [industry], references: [industry])
  createAt        DateTime         @default(now())
  updateAt        DateTime         @updatedAt
  bio             String?
  experience      Int?
  skills          String[]
  assessments     Assessment[]
  resume          Resume?
  coverLetter     CoverLetter[]
}
model Assessment {
  id              String        @id @default(cuid())
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  quizScore       Float
  questions       Json[]
  category        String
  improvementTip  String?
  createAt        DateTime      @default(now())
  updateAt        DateTime      @updatedAt
  @@index([userId])
}
model Resume {
  id              String        @id @default(cuid())
  userId          String        @unique
  user            User          @relation(fields: [userId], references: [id])
  content         String        @db.Text
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}
model CoverLetter {
  id            String   @id @default(uuid())
  content       String
  jobDescription String
  companyName   String
  jobTitle      String
  status        String   @default("draft")
  userId        String
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
}
model IndustryInsight {
  id              String           @id @default(cuid())
  industry        String           @unique
  users           User[]           @relation("industry")
  salaryRanges    Json[]
  growthRate      Float
  demandLevel     DemandLevel
  topSkills       String[]
  marketOutlook   MarketOutlook
  keyTrends       String[]
  recommendedSkills String[]
  lastUpdated     DateTime         @default(now())
  nextUpdate      DateTime
  @@index([industry])
}
enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}
enum MarketOutlook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}